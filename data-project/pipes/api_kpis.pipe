TOKEN "app_read_token" READ

TOKEN "commerce_UFA_filter" READ

NODE filter_prods
SQL >

    %
    SELECT *
    FROM bq_prods
    WHERE
        1
        {% if defined(prod_id) and prod_id != "All" %}
            AND id = {{ String(prod_id) }}
        {% end %}
        {% if defined(category) and category != "all" %}
            and category = {{ String(category) }}
        {% end %}



NODE select_minutes
SQL >

    %
    SELECT
        product,
        countIfMerge(n_views) n_views,
        countIfMerge(n_carts) n_carts,
        countIfMerge(n_sales) n_sales,
        price
    FROM events_by_min_mv
    JOIN filter_prods ON product = id
    WHERE
        ts >= now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour
    GROUP BY product, price



NODE select_hours
SQL >

    %
    SELECT
        product,
        countIfMerge(n_views) n_views,
        countIfMerge(n_carts) n_carts,
        countIfMerge(n_sales) n_sales,
        price
    FROM events_by_hour_mv
    JOIN filter_prods ON product = id
    WHERE
        ts >= now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour
    GROUP BY product, price



NODE select_days
SQL >

    %
    SELECT
        product,
        countIfMerge(n_views) n_views,
        countIfMerge(n_carts) n_carts,
        countIfMerge(n_sales) n_sales,
        price
    FROM events_by_day_mv
    JOIN filter_prods ON product = id
    WHERE
        ts >= now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour
    GROUP BY product, price



NODE endpoint
SQL >

    %
    SELECT
        sum(n_views) n_views,
        sum(n_carts * price) cart_value,
        sum(n_sales * price) revenue,
        revenue / cart_value * 100 conversion
    FROM
      {% if UInt16(hours_param) > 24 %} select_days
      {% elif UInt16(hours_param) > 3 %} select_hours
      {% else %} select_minutes
      {% end %}


