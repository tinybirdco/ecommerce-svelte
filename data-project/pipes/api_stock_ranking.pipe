DESCRIPTION >
	Current stock of products; Top products by view, cart or sale from web events enriched with product dimensions


TOKEN "read_ranking_token" READ

NODE filter_prods
DESCRIPTION >
    undefined

SQL >

    %
        SELECT *
        FROM bq_prods
        WHERE
            1
            {% if defined(category) and category != "all" %}
                AND category = {{ String(category) }}
            {% end %}



NODE latest_stock
DESCRIPTION >
    undefined

SQL >

    SELECT
        product,
        sum(available_stock) AS stock,
        CASE
            WHEN stock > 100 THEN 0 --in stock
            WHEN stock > 0 THEN 1 --almost out
            ELSE 2 --out of stock
            END AS stock_status
    FROM mv_latest_availability
    WHERE product IN (SELECT id FROM filter_prods)
    GROUP BY product



NODE ecomm_hits
DESCRIPTION >
    undefined

SQL >

    SELECT product, count() AS hits
    FROM ecomm_events
    WHERE
        timestamp >= now() - interval 1 hour
        AND product IN (SELECT id FROM filter_prods)
        AND event = 'sale'
    GROUP BY product



NODE endpoint
DESCRIPTION >
    undefined

SQL >

    %
        SELECT
            ls.product AS id,
            name,
            stock,
            stock_status,
            hits,
            CASE
                WHEN stock_status < 2 AND ROW_NUMBER() OVER (ORDER BY stock_status, hits DESC) <= 3
                THEN 'Trending ðŸ”¥'
                END AS rank_status,
            photo,
            price
        FROM latest_stock ls
        LEFT JOIN ecomm_hits eh on ls.product = eh.product
        JOIN filter_prods fp ON ls.product = fp.id
        WHERE
            1
            {% if defined(show_oos) and show_oos == '1' %} AND stock_status <= 2
            {% else %} AND stock_status < 2
            {% end %}
        {% if defined(ranking) and ranking == '1' %} ORDER BY stock_status, hits DESC
        {% else %} ORDER BY price DESC {% end %}


