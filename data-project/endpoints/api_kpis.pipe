NODE filter_join
SQL >

    %
    {% set hrs = UInt16(hours_param) %}

    SELECT product, countIfMerge(n_views) n_views, countIfMerge(n_carts) n_carts, countIfMerge(n_sales) n_sales, price
    FROM
    {% if hrs > 6 %}
            events_by_day_mv
        JOIN prods ON product = id
        WHERE ts >= toStartOfDay(now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour)
    {% elif hrs > 2 %}
            events_by_hour_mv
        JOIN prods ON product = id
        WHERE ts >= now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour
    {% else %}
            events_by_min_mv
        JOIN prods ON product = id
        WHERE ts >= now() - interval {{ UInt16(hours_param, 6, description="Hours to go back") }} hour
    {% end %}

        {% if defined(prod_id) and prod_id != "All" %}
            AND product = {{ String(prod_id, "Fg15LdqpWrs", description="Product ID param") }}
        {% end %}
    GROUP BY product, price



NODE endpoint
SQL >

    SELECT
        sum(n_views) n_views,
        sum(n_carts * price) cart_value,
        sum(n_sales * price) revenue,
        revenue / cart_value * 100 conversion
    FROM filter_join


